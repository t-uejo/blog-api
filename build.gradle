buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.flywaydb:flyway-mysql:11.1.1"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.flywaydb.flyway" version "11.1.1"
	id "com.github.ben-manes.versions" version "0.51.0"
	id "org.openapi.generator" version "7.6.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:mysql://localhost:3306/apidb'
	user = 'apiuser'
	password = 'apipass'
	locations = [
	        'filesystem:src/main/resources/db/migration',
	        'filesystem:src/main/resources/db/migration_dev' //開発用サンプルデータ
	]
}

def openApiSpecPath = "$projectDir/src/main/resources/openapi.yaml"
def openApiGeneratedCodePath = layout.buildDirectory.dir("spring").get().toString()
openApiValidate {
	inputSpec.set(openApiSpecPath)
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set(openApiSpecPath)
	outputDir.set(openApiGeneratedCodePath)
	apiPackage.set("com.example.blog.api")
	modelPackage.set("com.example.blog.model")
	configOptions.put("interfaceOnly", "true")
	configOptions.put("useSpringBoot3", "true")
	configOptions.put("documentationProvider", "none")
}